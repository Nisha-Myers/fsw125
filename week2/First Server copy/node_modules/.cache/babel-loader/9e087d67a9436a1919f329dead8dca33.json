{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\fsw-123\\\\my-app\\\\src\\\\components\\\\todoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = props => {\n  _s();\n\n  const [userInput, storeInput] = useState(\"\");\n\n  const changeInput = () => {\n    storeInput(document.querySelector(\"#inputValue\").value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"inputOptions\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"What would you like to do?\",\n      id: \"inputValue\",\n      onChange: () => changeInput()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"adding\",\n      onClick: () => {\n        if (document.querySelector(\"#inputValue\").value !== \"\") {\n          props.addTodo(userInput);\n        } else if (document.querySelector(\"#inputValue\").value === \"\") {\n          const removeError = () => {\n            document.querySelector(\"#errorReported\").remove();\n          };\n\n          const errorReported = document.createElement(\"h2\");\n          errorReported.textContent = \"Your input is empty, try adding something.\";\n          errorReported.style = \"color: red\";\n          errorReported.setAttribute(\"id\", \"errorReported\");\n          document.querySelector(\"#inputOptions\").appendChild(errorReported);\n          setTimeout(removeError, 4500);\n        }\n      },\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoForm, \"7wZW1EJfr35UerUxDiHPTo9KaCE=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","TodoForm","props","userInput","storeInput","changeInput","document","querySelector","value","addTodo","removeError","remove","errorReported","createElement","textContent","style","setAttribute","appendChild","setTimeout"],"sources":["C:/Users/User/Desktop/fsw-123/my-app/src/components/todoForm.js"],"sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst TodoForm = (props) => {\r\n\r\n    const [userInput, storeInput] = useState(\"\")\r\n    const changeInput = () => {storeInput(document.querySelector(\"#inputValue\").value)} \r\n\r\n    return(\r\n        <div id = \"inputOptions\">\r\n            <input type = \"text\" placeholder = \"What would you like to do?\"  id = \"inputValue\" onChange = {() => changeInput()}></input>\r\n            <button className='adding' onClick = {() =>{\r\n                if(document.querySelector(\"#inputValue\").value !== \"\"){\r\n                    props.addTodo(userInput)\r\n                } \r\n\r\n                else if(document.querySelector(\"#inputValue\").value === \"\"){\r\n                    const removeError = () =>{\r\n                        document.querySelector(\"#errorReported\").remove()\r\n                    }\r\n                    const errorReported = document.createElement(\"h2\") \r\n                    errorReported.textContent = \"Your input is empty, try adding something.\"\r\n                    errorReported.style = \"color: red\"\r\n                    errorReported.setAttribute(\"id\", \"errorReported\")\r\n                    document.querySelector(\"#inputOptions\").appendChild(errorReported)\r\n                    setTimeout(removeError, 4500)\r\n                }\r\n                \r\n                }}>Add todo</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAExB,MAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;;EACA,MAAMK,WAAW,GAAG,MAAM;IAACD,UAAU,CAACE,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,KAAvC,CAAV;EAAwD,CAAnF;;EAEA,oBACI;IAAK,EAAE,EAAG,cAAV;IAAA,wBACI;MAAO,IAAI,EAAG,MAAd;MAAqB,WAAW,EAAG,4BAAnC;MAAiE,EAAE,EAAG,YAAtE;MAAmF,QAAQ,EAAI,MAAMH,WAAW;IAAhH;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,SAAS,EAAC,QAAlB;MAA2B,OAAO,EAAI,MAAK;QACvC,IAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,KAAtC,KAAgD,EAAnD,EAAsD;UAClDN,KAAK,CAACO,OAAN,CAAcN,SAAd;QACH,CAFD,MAIK,IAAGG,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,KAAtC,KAAgD,EAAnD,EAAsD;UACvD,MAAME,WAAW,GAAG,MAAK;YACrBJ,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCI,MAAzC;UACH,CAFD;;UAGA,MAAMC,aAAa,GAAGN,QAAQ,CAACO,aAAT,CAAuB,IAAvB,CAAtB;UACAD,aAAa,CAACE,WAAd,GAA4B,4CAA5B;UACAF,aAAa,CAACG,KAAd,GAAsB,YAAtB;UACAH,aAAa,CAACI,YAAd,CAA2B,IAA3B,EAAiC,eAAjC;UACAV,QAAQ,CAACC,aAAT,CAAuB,eAAvB,EAAwCU,WAAxC,CAAoDL,aAApD;UACAM,UAAU,CAACR,WAAD,EAAc,IAAd,CAAV;QACH;MAEA,CAjBL;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH,CA5BD;;GAAMT,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}